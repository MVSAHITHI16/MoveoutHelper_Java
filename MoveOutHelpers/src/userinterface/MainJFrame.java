/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface;

import StudentSale.CityNetwork;
import StudentSale.DB4OUtil.DB4OUtil;
import StudentSale.EcoSystem;
import StudentSale.JPanelManager;
import StudentSale.User;
import StudentSale.organization.Organization;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userinterface.signUpWorkArea.SignUpJPanel;

/**
 *
 * @author sishwathoka
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    
    private static final Logger logger = Logger.getLogger(MainJFrame.class.getName());
    private EcoSystem ecoSystem;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    
    public MainJFrame() {
        initComponents();
//        setLoveGif();
        ecoSystem = dB4OUtil.retrieveSystem();
        this.setSize(1680, 1050);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainJSplitPane = new javax.swing.JSplitPane();
        controlJPanel = new javax.swing.JPanel();
        usrNameJLbl = new javax.swing.JLabel();
        usrNameJTxtFld = new javax.swing.JTextField();
        pswrdJLabel = new javax.swing.JLabel();
        logoutJBtn = new javax.swing.JButton();
        loginJBtn = new javax.swing.JButton();
        signUpJBtn = new javax.swing.JButton();
        jPswrdFld = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        userProcessJPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainJSplitPane.setDividerLocation(150);

        controlJPanel.setBackground(new java.awt.Color(255, 204, 204));
        controlJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        usrNameJLbl.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        usrNameJLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usrNameJLbl.setText("User Name");

        usrNameJTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usrNameJTxtFldActionPerformed(evt);
            }
        });

        pswrdJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        pswrdJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pswrdJLabel.setText("Password");

        logoutJBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png"))); // NOI18N
        logoutJBtn.setText("Logout");
        logoutJBtn.setEnabled(false);
        logoutJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJBtnActionPerformed(evt);
            }
        });

        loginJBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/login.png"))); // NOI18N
        loginJBtn.setText("Login");
        loginJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJBtnActionPerformed(evt);
            }
        });

        signUpJBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add-user.png"))); // NOI18N
        signUpJBtn.setText("SignUp");
        signUpJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpJBtnActionPerformed(evt);
            }
        });

        jPswrdFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPswrdFldActionPerformed(evt);
            }
        });
        jPswrdFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPswrdFldKeyPressed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/user.png"))); // NOI18N

        javax.swing.GroupLayout controlJPanelLayout = new javax.swing.GroupLayout(controlJPanel);
        controlJPanel.setLayout(controlJPanelLayout);
        controlJPanelLayout.setHorizontalGroup(
            controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlJPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlJPanelLayout.createSequentialGroup()
                        .addComponent(usrNameJLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
            .addGroup(controlJPanelLayout.createSequentialGroup()
                .addGroup(controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPswrdFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(controlJPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(signUpJBtn)
                            .addComponent(logoutJBtn)
                            .addComponent(loginJBtn)))
                    .addGroup(controlJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(usrNameJTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(controlJPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(pswrdJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        controlJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {loginJBtn, logoutJBtn, signUpJBtn});

        controlJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPswrdFld, usrNameJTxtFld});

        controlJPanelLayout.setVerticalGroup(
            controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlJPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usrNameJLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(usrNameJTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pswrdJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPswrdFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginJBtn)
                .addGap(18, 18, 18)
                .addComponent(logoutJBtn)
                .addGap(28, 28, 28)
                .addComponent(signUpJBtn)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        controlJPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {loginJBtn, logoutJBtn, signUpJBtn});

        mainJSplitPane.setLeftComponent(controlJPanel);

        userProcessJPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        userProcessJPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setBackground(javax.swing.UIManager.getDefaults().getColor("DesktopIcon.background"));
        jLabel1.setFont(new java.awt.Font("Arima Madurai", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" Move Out Helpers");
        jLabel1.setAlignmentX(0.5F);
        jLabel1.setAutoscrolls(true);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(800, 100));
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(662, 82));
        userProcessJPanel.add(jLabel1, "card2");
        jLabel1.getAccessibleContext().setAccessibleName("Move Out Helpers");

        mainJSplitPane.setRightComponent(userProcessJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1021, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainJSplitPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usrNameJTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usrNameJTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usrNameJTxtFldActionPerformed

    private void logoutJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutJBtnActionPerformed
        // TODO add your handling code here:
        
        logger.log(Level.INFO, "Logout button pressed");
        logoutJBtn.setEnabled(false);
        
        loginJBtn.setEnabled(true);
        usrNameJTxtFld.setEnabled(true);
        usrNameJTxtFld.setText("");
        jPswrdFld.setEnabled(true);
        jPswrdFld.setText("");
        signUpJBtn.setEnabled(true);
       
        
        userProcessJPanel.removeAll();
        JPanel blankPanel = new JPanel();
        CardLayout cardLayout = (CardLayout) userProcessJPanel.getLayout();
        userProcessJPanel.add("BlankPanel", blankPanel);
        cardLayout.next(userProcessJPanel);
        
        logger.log(Level.INFO, "Storing data to Db4o database");
        dB4OUtil.storeSystem(ecoSystem);
    }//GEN-LAST:event_logoutJBtnActionPerformed

    private void loginJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginJBtnActionPerformed
        // TODO add your handling code here:
        
        logger.log(Level.INFO, "Login Button pressed");
        String userName = usrNameJTxtFld.getText();
        char[] passwordChars = jPswrdFld.getPassword();
        String password = String.valueOf(passwordChars);
        
        if(userName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username cannot be Empty");
            return;
        }else{
            if(password.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Password cannot be Empty");
                return;
            }
        }
        
        User userLogged = null;
        
        logger.log(Level.INFO, "Checking credentials in SysAdmin Directory");
        //SysAdmin login functionality
        if(!ecoSystem.getSysAdminsDirectory().getSysAdmins().isEmpty()){
            
            userLogged = ecoSystem.getSysAdminsDirectory().isUserSysAdmin(userName, password);
            if(userLogged!=null) {
                CardLayout cardLayout = (CardLayout) userProcessJPanel.getLayout();
                userProcessJPanel.add("SysAdminHomePanel",JPanelManager.getSysAdminHomePanel(userProcessJPanel, ecoSystem, userLogged));
                cardLayout.next(userProcessJPanel);
                clearLoginPanels();
                return;
            }
                        
        }
        
        logger.log(Level.INFO, "Checking credentials in CityOfficial Directory");
        //CityOfficial login functionality
        if(userLogged==null) {
            
            if(!ecoSystem.getCityNetworkDirectory().getCityNetworks().isEmpty()) {
                for(CityNetwork cityNetwork:ecoSystem.getCityNetworkDirectory().getCityNetworks()) {
                    
                    if(!cityNetwork.getCityOfficialsDirectory().getCityOfficials().isEmpty()) {
                        
                        userLogged = cityNetwork.getCityOfficialsDirectory().isUserCityOfficial(userName,password);
                        if(userLogged!=null) {
                            CardLayout cardLayout = (CardLayout) userProcessJPanel.getLayout();
                            userProcessJPanel.add("CityOfficalHomePanel", JPanelManager.getCityOfficialHomePanel(userProcessJPanel,ecoSystem,userLogged,cityNetwork));
                            cardLayout.next(userProcessJPanel);
                            clearLoginPanels();
                            return;
                        }
                    }
                }
            }
        }
        
        logger.log(Level.INFO, "Checking credentials in Donor Directory");
        //Donor login functionality
        if(userLogged==null) {
            
            if(!ecoSystem.getDonorsDirectory().getDonors().isEmpty()) {
                
                userLogged = ecoSystem.getDonorsDirectory().isUserDonor(userName, password);
                if(userLogged!=null) {
                    CardLayout cardLayout = (CardLayout) userProcessJPanel.getLayout();
                    userProcessJPanel.add("DonorHomePanel",JPanelManager.getDonorHomePanel(userProcessJPanel, ecoSystem, userLogged));
                    cardLayout.next(userProcessJPanel);
                    clearLoginPanels();
                    return;
                }
            }
        }
        
        logger.log(Level.INFO, "Checking credentials in Cleaner Directory");
        //Cleaner login functionality
        if(userLogged==null) {
            
            if(!ecoSystem.getCityNetworkDirectory().getCityNetworks().isEmpty()) {
                for(CityNetwork cityNetwork:ecoSystem.getCityNetworkDirectory().getCityNetworks()){
                    
                    if(!cityNetwork.getCleanersDirectory().getCleaners().isEmpty()) {
                        
                        userLogged = cityNetwork.getCleanersDirectory().isUserCleaner(userName, password);
                        if(userLogged!=null) {
                            CardLayout cardLayout = (CardLayout) userProcessJPanel.getLayout();
                            userProcessJPanel.add("CleanerHomePanel",JPanelManager.getCleanerHomePanel(userProcessJPanel, ecoSystem, cityNetwork, userLogged));
                            cardLayout.next(userProcessJPanel);
                            clearLoginPanels();
                            return;
                        }
                    }
                }
            }
        }
        
        logger.log(Level.INFO, "Checking credentials in Organization Directory");
        //OrgManager login functionality
        if(userLogged==null) {
            
            if(!ecoSystem.getCityNetworkDirectory().getCityNetworks().isEmpty()) {
                for(CityNetwork cityNetwork:ecoSystem.getCityNetworkDirectory().getCityNetworks()) {
                    
                    if(!cityNetwork.getOrganizationDirectory().getOrganizations().isEmpty()) {
                        for(Organization org:cityNetwork.getOrganizationDirectory().getOrganizations()) {
                            
                            if(!org.getOrgManagerDirectory().getOrgManagers().isEmpty()) {
                                
                                userLogged = org.getOrgManagerDirectory().isUserOrgManager(userName,password);
                                if(userLogged!=null) {
                                    CardLayout cardLayout = (CardLayout) userProcessJPanel.getLayout();
                                    userProcessJPanel.add("OrgMangerHomePanel", JPanelManager.getOrgManagerHomePanel(userProcessJPanel, ecoSystem,
                                            cityNetwork, org, userLogged));
                                    cardLayout.next(userProcessJPanel);
                                    clearLoginPanels();
                                    return;
                                }
                            }
                        }
                    }
                }
            }
        }

        logger.log(Level.INFO, "Checking credentials in Delivery Volunteer Directory");
        //DeliveryVolunteer login functionality
        if(userLogged==null) {
            
            if(!ecoSystem.getCityNetworkDirectory().getCityNetworks().isEmpty()) {
                for(CityNetwork cityNetwork:ecoSystem.getCityNetworkDirectory().getCityNetworks()) {
                    
                    if(!cityNetwork.getOrganizationDirectory().getOrganizations().isEmpty()) {
                        for(Organization organization:cityNetwork.getOrganizationDirectory().getOrganizations()) {
                            
                            if(!organization.getDeliveryVolunteerDirectory().getDeliveryVolunteers().isEmpty()) {
                                
                                userLogged = organization.getDeliveryVolunteerDirectory().isUserDeliveryVolunteer(userName, password);
                                CityNetwork cn = cityNetwork;
                                Organization org = organization;
                                
                                if(userLogged!=null) {
                                    CardLayout cardLayout = (CardLayout) userProcessJPanel.getLayout();
                                    userProcessJPanel.add("DeliveryVolunteerHomePanel", JPanelManager.getDeliveryVolunteerHomePanel(userProcessJPanel, ecoSystem, cn, org, userLogged));
                                    cardLayout.next(userProcessJPanel);
                                    clearLoginPanels();
                                    return;
                                }
                            }
                        }
                    }
                }
            }
        }

        JOptionPane.showMessageDialog(this, "Please recheck your credentials");
        
    }//GEN-LAST:event_loginJBtnActionPerformed

    private void signUpJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpJBtnActionPerformed
//        signUpJButton.setEnabled(false);
        
        logger.log(Level.INFO, "Signup button pressed.");
        userProcessJPanel.removeAll();
        CardLayout cardLayout = (CardLayout) userProcessJPanel.getLayout();
        userProcessJPanel.add("SignUpPanel", new SignUpJPanel(userProcessJPanel, ecoSystem, dB4OUtil));
        cardLayout.next(userProcessJPanel);
        
    }//GEN-LAST:event_signUpJBtnActionPerformed

    private void jPswrdFldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPswrdFldKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            loginJBtn.doClick();
        }
    }//GEN-LAST:event_jPswrdFldKeyPressed

    private void jPswrdFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPswrdFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPswrdFldActionPerformed

    private void clearLoginPanels() {
        
        usrNameJTxtFld.setText("");
        usrNameJTxtFld.setEnabled(false);
        jPswrdFld.setText("");
        jPswrdFld.setEnabled(false);
        loginJBtn.setEnabled(false);
        logoutJBtn.setEnabled(true);
        signUpJBtn.setEnabled(false);
        
       
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jPswrdFld;
    private javax.swing.JButton loginJBtn;
    private javax.swing.JButton logoutJBtn;
    private javax.swing.JSplitPane mainJSplitPane;
    private javax.swing.JLabel pswrdJLabel;
    private javax.swing.JButton signUpJBtn;
    private javax.swing.JPanel userProcessJPanel;
    private javax.swing.JLabel usrNameJLbl;
    private javax.swing.JTextField usrNameJTxtFld;
    // End of variables declaration//GEN-END:variables
}
