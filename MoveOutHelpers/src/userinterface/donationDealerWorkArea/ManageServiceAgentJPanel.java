
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.donationDealerWorkArea;

import StudentSale.CityNetwork;
import StudentSale.EcoSystem;
import StudentSale.User;
import StudentSale.serviceAgent.ServiceAgent;
import StudentSale.helper.Constants;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harshila
 */
public class ManageServiceAgentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageServiceAgentJPanel
     */
    private JPanel userProcessContainer;
    private User userAccount;
    private EcoSystem ecoSystem;
    private CityNetwork cityNetwork;
     private ServiceAgent serviceAgent;
    
    public ManageServiceAgentJPanel(JPanel userProcessContainer,User userAccount,
        EcoSystem ecoSystem, CityNetwork cityNetwork) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount=userAccount;
        this.cityNetwork = cityNetwork;
        this.ecoSystem=ecoSystem;
        populateData();
        headerCityNameLbl.setText(cityNetwork.getCityName().name());
    }
    

    
     public void populateData(){
                 DefaultTableModel manageCleanersModel = (DefaultTableModel) manageservicetbl.getModel();
                 manageCleanersModel.setRowCount(0);
                 int currentCleaner=0;
                 
                 for(ServiceAgent serviceAgent:cityNetwork.getCleanersDirectory().getCleaners()){
                     currentCleaner++;
                     Object[] row = new Object[7];
                     row[0]=currentCleaner;
                     row[1]=serviceAgent;
                     row[2]=serviceAgent.getPhoneNo();
                     row[3]=serviceAgent.getEmail();
                     row[4]=serviceAgent.getAddress();
                     row[5]=serviceAgent.getUserName();
                     row[6]=serviceAgent.getPassword();
                     manageCleanersModel.addRow(row);
                 }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        manageservicetbl = new javax.swing.JTable();
        headingLbl = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        backbutton = new javax.swing.JButton();
        headerCityNameLbl = new javax.swing.JLabel();
        headerCityTagLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(javax.swing.UIManager.getDefaults().getColor("SlidingButton.selectedBackground"));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manageservicetbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Name", "Phone Number", "Email Id", "Address", "UserName", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(manageservicetbl);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 619, 135));

        headingLbl.setFont(new java.awt.Font("Lucida Sans", 1, 24)); // NOI18N
        headingLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingLbl.setText("Manage Service Agent");
        add(headingLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 380, 40));

        addButton.setText("Create >");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, -1, -1));

        updatebutton.setText("Update");
        updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebuttonActionPerformed(evt);
            }
        });
        add(updatebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, -1, -1));

        deletebutton.setText("Delete");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });
        add(deletebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 380, -1, -1));

        backbutton.setText("< < Back");
        backbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbuttonActionPerformed(evt);
            }
        });
        add(backbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 31, -1, -1));
        add(headerCityNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, 110, 30));

        headerCityTagLbl.setText("City:");
        add(headerCityTagLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, -1, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bg.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbuttonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backbuttonActionPerformed

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        // TODO add your handling code here:
         int selectedRow=manageservicetbl.getSelectedRow();
         if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Cleaner to delete");
            return;
        }else{
             ServiceAgent selectedCleaner=(ServiceAgent) manageservicetbl.getValueAt(selectedRow, 1);
             cityNetwork.getCleanersDirectory().getCleaners().remove(selectedCleaner);
             JOptionPane.showMessageDialog(null, "Successfully deleted Cleaner Account ");
            populateData();
            
            
         }
    }//GEN-LAST:event_deletebuttonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("Create New Cleaners", new CreateServiceAgentJPanel(userProcessContainer,  ecoSystem, userAccount, cityNetwork));
        cardLayout.next(userProcessContainer);
    }//GEN-LAST:event_addButtonActionPerformed

    private void updatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebuttonActionPerformed
        // TODO add your handling code here:
          int selectedRow=manageservicetbl.getSelectedRow();
         if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a Cleaner to update");
            return;
        }else{
        ServiceAgent selectedCleaner=(ServiceAgent) manageservicetbl.getValueAt(selectedRow, 1);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("Update Cleaner", new UpdateServiceAgentJPanel(userProcessContainer, ecoSystem, cityNetwork, selectedCleaner, userAccount));
        cardLayout.next(userProcessContainer);
         }
        
    }//GEN-LAST:event_updatebuttonActionPerformed
     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backbutton;
    private javax.swing.JButton deletebutton;
    private javax.swing.JLabel headerCityNameLbl;
    private javax.swing.JLabel headerCityTagLbl;
    private javax.swing.JLabel headingLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable manageservicetbl;
    private javax.swing.JButton updatebutton;
    // End of variables declaration//GEN-END:variables
}
