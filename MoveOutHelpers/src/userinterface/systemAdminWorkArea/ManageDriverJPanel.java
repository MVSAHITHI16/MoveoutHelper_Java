package userinterface.systemAdminWorkArea;

import StudentSale.EcoSystem;
import StudentSale.User;
import StudentSale.driver.Driver;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harshila
 */
public class ManageDriverJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePackingAgentJpanel
     */
    private JPanel userProcessJpanel;
    private EcoSystem ecoSystem;
    private User userLogged;

    public ManageDriverJPanel(JPanel userProcessJpanel, EcoSystem ecoSystem, User userLogged) {
        initComponents();
        this.userProcessJpanel = userProcessJpanel;
        this.ecoSystem = ecoSystem;
        this.userLogged = userLogged;
        populateDrivers();
    }

    public void populateDrivers() {
        DefaultTableModel model = (DefaultTableModel) tblDriverList.getModel();
        model.setRowCount(0);
        int count = 0;
        for (Driver driver : ecoSystem.getDriversDirectory().getDrivers()) {

            count++;
            Object[] row = new Object[6];
            row[0] = count;
            row[1] = driver;
            row[2] = driver.getAddress();
            row[3] = driver.getPhoneNo();
            row[4] = driver.getEmail();
            row[5] = driver.getCreatedBy();
            model.addRow(row);
        }
        DriverCountjLabel.setText(String.valueOf(ecoSystem.getDriversDirectory().getDrivers().size()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerjLabel = new javax.swing.JLabel();
        organizationheaderjLabel = new javax.swing.JLabel();
        donorsjLabel = new javax.swing.JLabel();
        DriverCountjLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDriverList = new javax.swing.JTable();
        backjButton = new javax.swing.JButton();
        createDriverJButton = new javax.swing.JButton();
        DriverDeletejButton = new javax.swing.JButton();
        updateDriverjButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(javax.swing.UIManager.getDefaults().getColor("SlidingButton.selectedBackground"));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerjLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        headerjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerjLabel.setText("Manage Driver");
        add(headerjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(216, 40, 600, 35));

        organizationheaderjLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        organizationheaderjLabel.setText("Count :");
        add(organizationheaderjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, -1, -1));

        donorsjLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        donorsjLabel.setText("Driver List");
        add(donorsjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 93, -1, -1));

        DriverCountjLabel.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        DriverCountjLabel.setText("0");
        add(DriverCountjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 450, 28, -1));

        tblDriverList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S-No", "Name", "Address", "Mobile No", "Email", "Created By"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDriverList);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 899, 270));

        backjButton.setText("< < Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 25, -1, -1));

        createDriverJButton.setText("Create");
        createDriverJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDriverJButtonActionPerformed(evt);
            }
        });
        add(createDriverJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(918, 439, -1, -1));

        DriverDeletejButton.setText("Delete");
        DriverDeletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DriverDeletejButtonActionPerformed(evt);
            }
        });
        add(DriverDeletejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(804, 439, -1, -1));

        updateDriverjButton.setText("Update");
        updateDriverjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDriverjButtonActionPerformed(evt);
            }
        });
        add(updateDriverjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(701, 439, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bg.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-100, -60, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessJpanel.remove(this);
        CardLayout layout = (CardLayout) userProcessJpanel.getLayout();
        layout.previous(userProcessJpanel);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void createDriverJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDriverJButtonActionPerformed
        CreateDriverJPanel panel = new CreateDriverJPanel(userProcessJpanel, ecoSystem, userLogged);
        userProcessJpanel.add("CreateDriverJPanel", panel);
        CardLayout layout = (CardLayout) userProcessJpanel.getLayout();
        layout.next(userProcessJpanel);
    }//GEN-LAST:event_createDriverJButtonActionPerformed

    private void DriverDeletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DriverDeletejButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDriverList.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        } else {
            Driver selectedDriver = (Driver) tblDriverList.getValueAt(selectedRow, 1);
            ecoSystem.getDriversDirectory().getDrivers().remove(selectedDriver);
            JOptionPane.showMessageDialog(null, "Driver deleted successfully");
            populateDrivers();
        }
    }//GEN-LAST:event_DriverDeletejButtonActionPerformed

    private void updateDriverjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDriverjButtonActionPerformed
        int selectedRow = tblDriverList.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        } else {
            Driver driver = (Driver) tblDriverList.getValueAt(selectedRow, 1);
            UpdateDriverJPanel updateDriverJPanel = new UpdateDriverJPanel(userProcessJpanel, ecoSystem, driver, userLogged);
            userProcessJpanel.add("UpdateDriverJPanel", updateDriverJPanel);
            CardLayout layout = (CardLayout) userProcessJpanel.getLayout();
            layout.next(userProcessJpanel);
        }
    }//GEN-LAST:event_updateDriverjButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DriverCountjLabel;
    private javax.swing.JButton DriverDeletejButton;
    private javax.swing.JButton backjButton;
    private javax.swing.JButton createDriverJButton;
    private javax.swing.JLabel donorsjLabel;
    private javax.swing.JLabel headerjLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel organizationheaderjLabel;
    private javax.swing.JTable tblDriverList;
    private javax.swing.JButton updateDriverjButton;
    // End of variables declaration//GEN-END:variables
}
