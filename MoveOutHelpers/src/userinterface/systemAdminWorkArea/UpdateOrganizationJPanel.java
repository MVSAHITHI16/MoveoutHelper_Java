/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userinterface.systemAdminWorkArea;

import StudentSale.EcoSystem;
import StudentSale.User;
import StudentSale.enums.OrganizationType;
import StudentSale.helper.Constants;
import StudentSale.helper.EmailHelper;
import StudentSale.helper.PhoneNoHelper;
import StudentSale.helper.ValidateInputs;
import StudentSale.organization.Organization;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author harshila
 */
public class UpdateOrganizationJPanel extends javax.swing.JPanel {

    /** Creates new form UpdateOrganizationJPanel */
    
    private JPanel userProcessJpanel;
    private EcoSystem ecoSystem;
    private Organization org;
    private User userLogged;
    private static final Logger logger = Logger.getLogger(UpdateOrganizationJPanel.class.getName());
    private String imagePath = Constants.DEFAULT_ORGANIZATION_IMAGE_PATH;
    
    public UpdateOrganizationJPanel(JPanel userProcessJpanel, EcoSystem ecoSystem, Organization org, User userLogged) {
        initComponents();
        this.userProcessJpanel = userProcessJpanel;
        this.ecoSystem = ecoSystem;
        this.org = org;
        this.userLogged = userLogged;
        picHolderjLabel.setSize(126, 139);
        
        picHolderjLabel.setSize(126, 139);
        populateData();
    }
    
    private void populateData() {
        
        namejTextField.setText(org.getOrganizationName());
        emailjTextField.setText(org.getEmail());
        addressjTextField.setText(org.getAddress());
        phoneNojTextField.setText(org.getPhoneNo());
        imagePath = org.getOrganizationImage();
        
        String[] organizationTypes  = OrganizationType.getOrganizationTypesArray();
        organizationTypejComboBox.removeAllItems();
        for(String organizationType: organizationTypes) {
            organizationTypejComboBox.addItem(organizationType);
        }
        
        organizationTypejComboBox.setSelectedItem(org.getOrganizationType().name());
        
        setPhoto(imagePath);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerjLabel = new javax.swing.JLabel();
        emailjLabel = new javax.swing.JLabel();
        namejLabel = new javax.swing.JLabel();
        uploadjButton = new javax.swing.JButton();
        updatejButton = new javax.swing.JButton();
        emailjTextField = new javax.swing.JTextField();
        phoneNojLabel = new javax.swing.JLabel();
        organizationTypejLabel = new javax.swing.JLabel();
        namejTextField = new javax.swing.JTextField();
        addressjLabel = new javax.swing.JLabel();
        organizationTypejComboBox = new javax.swing.JComboBox<>();
        addressjTextField = new javax.swing.JTextField();
        backjButton = new javax.swing.JButton();
        phoneNojTextField = new javax.swing.JTextField();
        picHolderjLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(javax.swing.UIManager.getDefaults().getColor("DesktopIcon.background"));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerjLabel.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        headerjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerjLabel.setText("Update Organization");
        add(headerjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 34, 415, 34));

        emailjLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        emailjLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailjLabel.setText("Email :");
        add(emailjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 178, 122, -1));

        namejLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        namejLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        namejLabel.setText("Name :");
        add(namejLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 134, 122, -1));

        uploadjButton.setText("upload");
        uploadjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadjButtonActionPerformed(evt);
            }
        });
        add(uploadjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 300, -1, -1));

        updatejButton.setText("Update");
        updatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatejButtonActionPerformed(evt);
            }
        });
        add(updatejButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 362, -1, -1));

        emailjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailjTextFieldActionPerformed(evt);
            }
        });
        add(emailjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 175, 234, -1));

        phoneNojLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        phoneNojLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        phoneNojLabel.setText("Phone No :");
        add(phoneNojLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 219, 122, -1));

        organizationTypejLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        organizationTypejLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        organizationTypejLabel.setText("Organization Type :");
        add(organizationTypejLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 310, -1, -1));

        namejTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namejTextFieldActionPerformed(evt);
            }
        });
        add(namejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 131, 234, -1));

        addressjLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        addressjLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addressjLabel.setText("Address :");
        add(addressjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 272, 122, -1));

        organizationTypejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationTypejComboBoxActionPerformed(evt);
            }
        });
        add(organizationTypejComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 310, 172, -1));

        addressjTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressjTextFieldActionPerformed(evt);
            }
        });
        add(addressjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 269, 234, -1));

        backjButton.setText("< < Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 42, -1, -1));

        phoneNojTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNojTextFieldActionPerformed(evt);
            }
        });
        add(phoneNojTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 216, 234, -1));

        picHolderjLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(picHolderjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 140, 126, 139));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bg.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-40, -30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void uploadjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadjButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("/"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Jpeg format", "jpeg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Jpg format", "jpg"));
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Png format", "png"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            imagePath = selectedFile.getAbsolutePath();
            setPhoto(imagePath);
        }
    }//GEN-LAST:event_uploadjButtonActionPerformed

    private void setPhoto(String imagePath) {
        
        if(imagePath.equals(Constants.DEFAULT_ORGANIZATION_IMAGE_PATH)) {
            ImageIcon photo = new ImageIcon(getClass().getResource(Constants.DEFAULT_ORGANIZATION_IMAGE_PATH).getPath());
            Image photoResized = photo.getImage().getScaledInstance(picHolderjLabel.getWidth(), picHolderjLabel.getHeight(),4);
            picHolderjLabel.setIcon(new ImageIcon(photoResized));
            return;
        }
        
        ImageIcon photo = new ImageIcon(imagePath);
        Image photoResized = photo.getImage().getScaledInstance(picHolderjLabel.getWidth(), picHolderjLabel.getHeight(),4);
        picHolderjLabel.setIcon(new ImageIcon(photoResized));
    }
    
    private void updatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatejButtonActionPerformed
        // TODO add your handling code here:
        if(isDataEnteredValid()) {

            if(!org.getEmail().equals(emailjTextField.getText()) && EmailHelper.isEmailAlreadyExisted(ecoSystem, emailjTextField.getText())) {
                JOptionPane.showMessageDialog(this, "Email already Exists in the Ecosystem.");
                return;
            }

            if(!org.getPhoneNo().equals(phoneNojTextField.getText()) && PhoneNoHelper.isPhoneNoAlreadyExisted(ecoSystem, phoneNojTextField.getText())) {
                JOptionPane.showMessageDialog(this, "PhoneNo already Exists in the Ecosystem.");
                return;
            }

            org.setOrganizationName(namejTextField.getText());
            org.setEmail(emailjTextField.getText());
            org.setPhoneNo(phoneNojTextField.getText());
            org.setAddress(addressjTextField.getText());
            org.setOrganizationImage(imagePath);
            org.setOrganizationType(OrganizationType.valueOf((String) organizationTypejComboBox.getSelectedItem()));

            JOptionPane.showMessageDialog(this, "Successfully updated Organization");
            logger.log(Level.INFO, "Organization Saved");
        }else{
            JOptionPane.showMessageDialog(this, "Error updating Organization. Please check DataTypes");
        }
    }//GEN-LAST:event_updatejButtonActionPerformed

    private boolean isDataEnteredValid() {
        if(ValidateInputs.isNameValid(namejTextField.getText())
                && ValidateInputs.isEmailValid(emailjTextField.getText()) 
                && ValidateInputs.isPhoneNumberValid(phoneNojTextField.getText())
                && ValidateInputs.isAddressValid(addressjTextField.getText()))  {
           return true; 
        }
        return false;
    }    
    
    private void organizationTypejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationTypejComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organizationTypejComboBoxActionPerformed

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        // TODO add your handling code here:
        userProcessJpanel.remove(this);

        Component[] components = userProcessJpanel.getComponents();
        ManageOrganizationsJPanel manageOrganizationsJPanel = (ManageOrganizationsJPanel) components[components.length-1];
        manageOrganizationsJPanel.populateOrganizations();

        CardLayout cardLayout = (CardLayout) userProcessJpanel.getLayout();
        cardLayout.previous(userProcessJpanel);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void namejTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namejTextFieldActionPerformed
        // TODO add your handling code here:
         if( !ValidateInputs.isNameValid(namejTextField.getText()) ){
                   JOptionPane.showMessageDialog(this, "Enter Name correctly");

       }
    }//GEN-LAST:event_namejTextFieldActionPerformed

    private void emailjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailjTextFieldActionPerformed
        // TODO add your handling code here:
        if( !ValidateInputs.isEmailValid(emailjTextField.getText()) ){
                   JOptionPane.showMessageDialog(this, "Enter Email correctly");
       } 
    }//GEN-LAST:event_emailjTextFieldActionPerformed

    private void phoneNojTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNojTextFieldActionPerformed
        // TODO add your handling code here:
         if( !ValidateInputs.isPhoneNumberValid(phoneNojTextField.getText()) ){
                   JOptionPane.showMessageDialog(this, "Enter PhoneNumber correctly");
       } 
    }//GEN-LAST:event_phoneNojTextFieldActionPerformed

    private void addressjTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressjTextFieldActionPerformed
        // TODO add your handling code here:
        if( !ValidateInputs.isAddressValid(addressjTextField.getText()) ){
                   JOptionPane.showMessageDialog(this, "Enter Address correctly");
       } 
    }//GEN-LAST:event_addressjTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressjLabel;
    private javax.swing.JTextField addressjTextField;
    private javax.swing.JButton backjButton;
    private javax.swing.JLabel emailjLabel;
    private javax.swing.JTextField emailjTextField;
    private javax.swing.JLabel headerjLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel namejLabel;
    private javax.swing.JTextField namejTextField;
    private javax.swing.JComboBox<String> organizationTypejComboBox;
    private javax.swing.JLabel organizationTypejLabel;
    private javax.swing.JLabel phoneNojLabel;
    private javax.swing.JTextField phoneNojTextField;
    private javax.swing.JLabel picHolderjLabel;
    private javax.swing.JButton updatejButton;
    private javax.swing.JButton uploadjButton;
    // End of variables declaration//GEN-END:variables

}
